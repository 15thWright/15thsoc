class CfgSkeletons 
{
	class JS_JC_F35
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = 
		{

//Dummy animations 
			"ab_switch", "",
			"damage_switch", "",
			"auxtank_switch", "",
			"refueling_switch", "",
			"rpm_meter", "",
			"g_meter", "",
			"eject_switch", "",
			"service_menu_switch", "",
			"rearming_done_switch", "",
			"gps_targeting_switch", "",

//Added by John_Spartan
			"ejection_seat", "",

//Pilot view
			"altB_1","",
			"altR_1","",
			"mph_1","",
			"vario_1","",
			"flapx","",
			"gearx","",
			"rpm_1","",
			"rpm_2","",
			"fuel_1","",
			"fuel_2","",
			"kompas_4","",
			"canopy_elevator","",
			"display","",
			"horizont_3","",
//flaps, hatches, etc.
			"flap_fl","",
			"flap_fr","",
			"flap_bl","",
			"flap_br","",
			"elevator_l","",
			"elevator_r","",
			"rudder_l","",
			"rudder_r","",
//landing gear front
			"gear_1_1","",
			"gear_1_1_steering","gear_1_1",
			"gear_1_1_damper","gear_1_1_steering",
			"wheel_1_1","gear_1_1_damper",
//left main gear
			"gear_2_1","",
			"gear_2_1_stabil2","gear_2_1",
			"gear_2_1_rot","gear_2_1",
			"gear_2_1_damper","gear_2_1_rot",
			"gear_2_1_stabil","gear_2_1_damper",
			"wheel_2_1","gear_2_1_damper",
//right main gear
			"gear_2_2","",
			"gear_2_2_stabil2","gear_2_2",
			"gear_2_2_rot","gear_2_2",
			"gear_2_2_damper","gear_2_2_rot",
			"gear_2_2_stabil","gear_2_2_damper",
			"wheel_2_2","gear_2_2_damper",
//hatches
			"hatch_1_1_f","",
			"hatch_1_1_b","",
			"hatch_1_1_ml","",
			"hatch_1_1_mr","",
			"hatch_1_1_bl","",
			"hatch_1_1_br","",
			"hatch_2_1","",
			"hatch_2_2","",
			"hatch_3_1","",
			"hatch_3_2","",
//VTOL Hatches
			"hatch_eng_b_1_1","",
			"hatch_eng_b_1_2","",
			"hatch_eng_t_1_1","",
			"hatch_eng_t_1_3","hatch_eng_t_1_1",
			"hatch_eng_t_1_2","",
			"hatch_eng_t_1_4","hatch_eng_t_1_2",
			"hatch_eng_t_2_1","",
			"hatch_eng_t_2_2","",
			"hatch_eng_b_2_1","",
			"hatch_eng_b_2_2","",
			"hatch_eng_b_3_1","",
			"hatch_eng_b_3_2","",
			"engine_1","",
			"engine_2","engine_1",
			"engine_3","engine_2",
//WeaponBays
			"hatch_weaponbay_1_1","",
			"hatch_weaponbay_1_2","",
			"hatch_weaponbay_1_3","",
			"hatch_weaponbay_1_4","",

//Exhausts
			"exhaust_up","",
			"exhaust_left","",
			"exhaust_down","",
			"exhaust_right","",
//Heat Shield
			"heat_Shield_Up","engine_3",
			"heat_Shield_Left","engine_3",
			"heat_Shield_Right","engine_3",
			"heat_Shield_Down","engine_3",
//Effects
			"Fire",""
		};
	};
};

class cfgModels 
{
	
	class JS_JC_F35 
	{
		skeletonName = "JS_JC_F35";
		sectionsInherit = "";
		
		sections[]=
		{
			"zbytek",
			"podsvit pristroju",
			"trup",
			"motor",
			"palivo",
			"L svetlo",
			"sklo predni L",
			"camo1"
		};
		class Animations
		{

//added by John_Spartan

			class damage_switch 
			{
				type = "rotationX";
				selection = "damage_switch";
				axis = "osa_damage_switch";
				memory = 1;
				minValue = 0;
				maxValue = 1;
				angle0 = "rad 0";
				angle1 = "rad +180";
			};

			class ab_switch 
			{
				type = "rotationX";
				selection = "ab_switch";
				axis = "osa_ab_switch";
				memory = 1;
				minValue = 0;
				maxValue = 1;
				angle0 = "rad 0";
				angle1 = "rad +180";
			};

			class auxtank_switch 
			{
				type = "rotationX";
				selection = "auxtank_switch";
				axis = "osa_auxtank_switch";
				memory = 1;
				minValue = 0;
				maxValue = 1;
				angle0 = "rad 0";
				angle1 = "rad +180";
			};

			class refueling_switch 
			{
				type = "rotationX";
				selection = "refueling_switch";
				axis = "osa_refueling_switch";
				memory = 1;
				minValue = 0;
				maxValue = 1;
				angle0 = "rad 0";
				angle1 = "rad +180";
			};

			class eject_switch 
			{
				type = "rotationX";
				source="user";
				selection = "eject_switch";
				axis = "osa_eject_switch";
				memory = 1;
				minValue = 0;
				maxValue = 1;
				angle0 = "rad 0";
				angle1 = "rad +180";
			};

			class service_menu_switch
			{
				type = "rotationX";
				source="user";
				selection = "service_menu_switch";
				axis = "osa_service_menu_switch";
				memory = 1;
				minValue = 0;
				maxValue = 1;
				angle0 = "rad 0";
				angle1 = "rad +180";
			};

			class rearming_done_switch
			{
				type = "rotationX";
				source="user";
				selection = "rearming_done_switch";
				axis = "osa_rearming_done_switch";
				memory = 1;
				minValue = 0;
				maxValue = 1;
				angle0 = "rad 0";
				angle1 = "rad +180";
			};

			class gps_targeting_switch 
			{
				type = "rotationX";
				selection = "gps_targeting_switch";
				axis = "osa_gps_targeting_switch";
				memory = 1;
				minValue = 0;
				maxValue = 2;
				angle0 = "rad 0";
				angle1 = "rad +180";
			};

			class rpm_meter 
			{
				type = "rotationX";
				source = "throttleRTD1";
				selection = "rpm_meter";
				axis = "osa_rpm_meter";
				memory = 1;
				minValue = 0;
				maxValue = 1;
				angle0 = "rad 0";
				angle1 = "rad +180";
			}; 

			class g_meter 
			{
				type = "rotationX";
				source = "gmeter";
				selection = "g_meter";
				axis = "osa_g_meter";
				memory = 1;
				minValue = 0;
				maxValue = 1;
				angle0 = "rad 0";
				angle1 = "rad +180";
			};

			class Stick_pilot_Bank
			{

				type = "rotation";
				source = "aileron";
				selection = "stick_pilot";
				axis = "osa_stick_pilot_bank";
				animPeriod = 4;
				memory = 0;
				minValue = "rad -10";
				maxValue = "rad +10";
				angle0 = "rad -10";
				angle1 = "rad +10";

			};

			class Stick_pilot_Dive
			{

				type = "rotation";
				source = "elevator";
				selection = "stick_pilot";
				axis = "osa_stick_pilot_dive";
				animPeriod = 4;
				memory = 0;
				minValue = "rad -10";
				maxValue = "rad +10";
				angle0 = "rad +10";
				angle1 = "rad -10";

			};

			class ejection_seat_hide
			{
				type="hide";
				source="user";
				selection="ejection_seat";
				minValue = 0.0;
				maxValue = 1.0;
				minPhase = 0.0;
				maxPhase = 1.0;
				initPhase = 1;
				hideValue = 0.001;

			};

			class r_canopy_hide
			{
				type="hide";
				source="user";
				selection="canopy_elevator";
				minValue = 0.0;
				maxValue = 1.0;
				minPhase = 0.0;
				maxPhase = 1.0;
				initPhase = 1;
				hideValue = 0.001;

			};

//Pilot view
			class Rotation
			{
				type="rotation";
			};
			class HorizonDive
			{
				type="rotationX";
				source="horizondive";
				selection="horizont_3";
				axis="horizont_3_axis";
				memory=0;
				minValue="rad -90";
				maxValue="rad 90";
				angle0=-1.570796;
				angle1=1.570796;
			};
			class HorizonBank
			{
				type="rotationZ";
				source="horizonBank";
				selection="horizont_3";
				axis="";
				memory=0;
				minValue=-6.283190;
				maxValue=6.283190;
				angle0=-6.283185;
				angle1=6.283185;
			};
			class IndicatorFuel1: Rotation
			{
				source="fuel";
				selection="fuel_1";
				axis="fuel_1_axis";
				memory=0;
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1=3.665000;
			};
			class DisplayOn: Rotation
			{
				type="hide";
				source="rpm";
				hidevalue = 0.1;
				selection="display";
			};
			class IndicatorFuel2: IndicatorFuel1
			{
				selection="fuel_2";
				axis="fuel_2_axis";
			};
			class IndicatorRPM1: Rotation
			{
				source="rpm";
				selection="rpm_1";
				axis="rpm_1_axis";
				memory=0;
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1=3.665000;
			};
			class IndicatorRPM2: IndicatorRPM1
			{
				source="rpm";
				selection="rpm_2";
				axis="rpm_2_axis";
				memory=0;
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1=3.665000;
			};
			class IndicatorFlaps: Rotation
			{
				type="translation";
				source="flap";
				selection="flapx";
				axis="gearx_axis";
				memory=0;
				minValue=0.000000;
				maxValue=0.500000;
				offset0=-10.000000;
				offset1=0.000000;
			};
			class IndicatorGear: Rotation
			{
				type="translation";
				source="gear";
				selection="gearx";
				axis="gearx_axis";
				memory=0;
				minValue=0.000000;
				maxValue=1.000000;
				offset0=-10.000000;
				offset1=0.000000;
			};
			class IndicatorVertSpeed1: Rotation
			{
				source="vertSpeed";
				selection="vario_1";
				axis="vario_1_axis";
				memory=0;
				minValue=-60.000000;
				maxValue=60.000000;
				angle0=2.268928;
				angle1=-2.268928;
			};
			class IndicatorSpeed1: Rotation
			{
				source="speed";
				selection="mph_1";
				axis="mph_1_axis";
				memory=0;
				minValue=0;
				maxValue=210;
				angle0=0;
				angle1=3.665000;
			};
			class IndicatorAltRadar1: Rotation
			{
				source="altRadar";
				selection="altr_1";
				axis="altr_1_axis";
				memory=0;
				minValue=0.000000;
				maxValue=10000.000000;
				angle0=0.000000;
				angle1=3.665000;
			};
			class IndicatorAltBaro1: Rotation
			{
				source="altBaro";
				selection="altb_1";
				axis="altb_1_axis";
				memory=0;
				minValue=0.000000;
				maxValue=10000.000000;
				angle0=0.000000;
				angle1=3.665000;
			};
			class kompas_4: Rotation
			{
				source="direction";
				selection="kompas_4";
				axis="kompas_4_axis";
				memory=0;
				minValue=-3.141593;
				maxValue=3.141593;
				angle0=0;
				angle1="-rad 360";
			};
			class FlapFL: Rotation
			{
				source= "flap";
				selection = "flap_fl";
				axis = "flap_fl_axis";
				angle1 = "rad 28.6";
				minValue = 0.5;	//Only comes out when full flaps are set
				maxValue = 1;
			};
			class FlapFR: FlapFL
			{
				selection = "flap_fr";
				axis = "flap_fr_axis";
				angle1 = "rad -28.6";
			};
			//flaps on the back part of the wing
			class FlapBL: Rotation
			{
				source= "flap";
				selection = "flap_bl";
				axis = "flap_bl_axis";
				angle1 = "rad -28.6";
			};
			class FlapBR: FlapBL
			{
				selection = "flap_br";
				axis = "flap_br_axis";
				angle1 = "rad 28.6";
			};
			class ElevatorL: Rotation //Rear elevators
			{
				source= "elevator";
				selection = "elevator_l";
				axis = "elevator_l_axis";
				minValue = -1;
				maxValue = 1;
				angle0 = "rad 28.6";
				angle1 = "rad -28.6";
			};
			class ElevatorR: ElevatorL
			{
				selection = "elevator_r";
				axis = "elevator_r_axis";
				angle0 = "rad -28.6";
				angle1 = "rad 28.6";
			};
			class AileronFL	: Rotation //aileron that steers over main wing flaps
			{
				source= "aileron";
				selection = "flap_bl";
				axis = "flap_bl_axis";
				minValue = -1.4;
				maxValue = 1.4;
				angle0 = "rad -10";
				angle1 = "rad 10";
			};
			class AileronFR: AileronFL
			{
				selection = "flap_br";
				axis = "flap_br_axis";
			};
			class AileronBL: AileronFL
			{
				selection = "elevator_l";
				axis = "elevator_l_axis";
			};
			class AileronBR: AileronBL
			{
				selection = "elevator_r";
				axis = "elevator_r_axis";
			};
			class RudderL: Rotation
			{
				source= "rudder";
				selection = "rudder_l";
				axis = "rudder_l_axis";
				minValue = -1;
				maxValue = 1;
				angle0 = "rad -30";
				angle1 = "rad 30";
			};
			class RudderR: RudderL
			{
				selection = "rudder_r";
				axis = "rudder_r_axis";
			};
//FrontGear + Hatches ToDo: not working properly yet, gear shows up in cockpit
			class FrontGear: Rotation
			{
				source = gear;
				selection = "gear_1_1";
				axis = "gear_1_1_axis";
				maxValue = 0.8;
		 		angle1 = "rad -92";
			};
			class FrontGearSteering
			{
				type="rotationY";
		      		source = "rudder";
				selection = "gear_1_1_damper";
				axis = "gear_1_1_damper_axis";
				memory = 1;
				minValue = -9;
				maxValue = 9;
				angle0 = "rad -45";
				angle1 = "rad +45";
			};
			class FrontGearDamper
			{
				type = "translation";
				source = altRadar;
				selection = "gear_1_1_damper";
				axis = "gear_1_1_damper_axis";
				memory = 1;
				minValue = 0.0;
				maxValue = 0.15;
				offset0 = -1;
				offset1 = 0;
			};
			class Wheel_1_1
			{
				type = "rotationX";
		      		source = "wheel";
				selection = "wheel_1_1";
				axis = "wheel_1_1_axis";
				memory = 1;
				sourceAddress = "loop";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "rad -180";
			};

			class Hatch_1_1_f: Rotation
			{
				source = gear;
				selection = hatch_1_1_f;
				axis = hatch_1_1_f_axis;
				minValue = 0.75;
				angle1 = "rad 90";
			};
			class Hatch_1_1_b: Hatch_1_1_f
			{
				selection = hatch_1_1_b;
				axis = hatch_1_1_b_axis;
				minValue = 0;
				maxValue = 0.8;
				angle1 = "rad -90";
			};
//MainGear Left + Hatches ToDo: Missing hatch
			class Hatch_2_1: Rotation
			{
				source = gear;
				selection = Hatch_2_1;
				axis = Hatch_2_1_axis;
				minValue = 0.0;
				maxValue = 0.45;
				angle0 = "0";
				angle1 = "rad -40";
			};
			class Hatch_2_1_Close: Hatch_2_1
			{
				minValue = 0.9;
				maxValue = 1;
				angle0 = "0";
				angle1 = "rad 40";
			};
			class Hatch_2_2: Hatch_2_1
			{
				selection = Hatch_2_2;
				axis = Hatch_2_2_axis;
				angle0 = "0";
				angle1 = "rad 40";
			};
			class Hatch_2_2_Close: Hatch_2_2
			{
				minValue = 0.9;
				maxValue = 1;
				angle0 = "0";
				angle1 = "rad -40";
			};
			class Hatch_3_1: Rotation
			{
				source = gear;
				selection = Hatch_3_1;
				axis = Hatch_3_1_axis;
				minValue = 0.9;
				angle0 = "rad 30";
				angle1 = "rad 90";
			};
			class Hatch_3_2: Hatch_3_1
			{
				selection = Hatch_3_2;
				axis = Hatch_3_2_axis;
				angle0 = "rad -30";
				angle1 = "rad -90";
			};
			class Gear_2_1_Main: Rotation
			{
				source = gear;
				selection = Gear_2_1;
				axis = Gear_2_1_axis;
				maxValue = 0.9;
				angle1 = "rad -84";
			};
			class Gear_2_2_Main: Gear_2_1_Main
			{
				selection = Gear_2_2;
				axis = Gear_2_2_axis;
				angle1 = "rad -84.3";
			};
			class Gear_2_1_Stabil2: Rotation
			{
				source = gear;
				selection = Gear_2_1_stabil2;
				axis = gear_2_1_stabil2_axis;
				maxValue = 0.9;
				angle1 = "rad -45";
			};
			class Gear_2_2_Stabil2: Gear_2_1_Stabil2
			{
				selection = Gear_2_2_stabil2;
				axis = Gear_2_2_stabil2_axis;
			};
			class Gear_2_1_Rot: Rotation
			{
				source = gear;
				selection = Gear_2_1_rot;
				axis = Gear_2_1_damper_axis;
				minValue = 0.7;
				maxValue = 0.9;
				angle1 = "rad -90";
			};
			class Gear_2_2_Rot: Gear_2_1_Rot
			{
				selection = Gear_2_2_rot;
				axis = gear_2_2_damper_axis;
				angle1 = "rad 90";
			};
			class Gear_2_1_Damper
			{
				type = "translation";
				source = altRadar;
				selection = "gear_2_1_damper";
				axis = "gear_2_1_damper_axis";
				memory = 1;
				minValue = 0.0;
				maxValue = 0.15;
				offset0 = -1;
				offset1 = 0;
			};
			class gear_2_2_damper: gear_2_1_damper
			{
				selection = "gear_2_2_damper";
				axis = "gear_2_2_damper_axis";
			};
			class Gear_2_1_stabil: Rotation
			{
				source = altRadar;
				selection = Gear_2_1_stabil;
				axis = gear_2_1_stabil_axis;
				minValue = 2.7;
				maxValue = 2.85;
				angle0 = "rad 35";
				angle1 = 0;
			};
			class Gear_2_2_stabil: Gear_2_1_stabil
			{
				selection = Gear_2_2_stabil;
				axis = gear_2_2_stabil_axis;
			};
			class Wheel_2_1: Wheel_1_1
			{
				selection = "wheel_2_1";
				axis = "wheel_2_1_axis";
				angle1 = "rad -160";
			};
			class Wheel_2_2: Wheel_2_1
			{
				selection = "wheel_2_2";
				axis = "wheel_2_2_axis";
			};
//VTOL System
			class Hatch_Eng_b_1_1: Rotation
			{
				source = "thrustVector";
				selection = Hatch_Eng_b_1_1;
				axis = Hatch_Eng_b_1_1_axis;
				minValue = -1;
				maxValue = 0;
				angle1 = "rad 90";
			};
			class Hatch_Eng_b_1_2: Hatch_Eng_b_1_1
			{
				selection = Hatch_Eng_b_1_2;
				axis = Hatch_Eng_b_1_2_axis;
				angle1 = "rad -90";
			};
			class Hatch_Eng_t_1_1: Hatch_Eng_b_1_1
			{
				selection = Hatch_Eng_t_1_1;
				axis = Hatch_Eng_t_1_1_axis;
				angle1 = "rad -120";
			};
			class Hatch_Eng_t_1_2: Hatch_Eng_b_1_1
			{
				selection = Hatch_Eng_t_1_2;
				axis = Hatch_Eng_t_1_2_axis;
				angle1 = "rad 120";
			};
			class Hatch_Eng_t_1_3: Hatch_Eng_b_1_1
			{
				selection = Hatch_Eng_t_1_3;
				axis = Hatch_Eng_t_1_3_axis;
				angle1 = "rad -145";
			};
			class Hatch_Eng_t_1_4: Hatch_Eng_b_1_1
			{
				selection = Hatch_Eng_t_1_4;
				axis = Hatch_Eng_t_1_4_axis;
				angle1 = "rad 145";
			};
			class Hatch_Eng_t_2_1: Hatch_Eng_b_1_1
			{
				selection = Hatch_Eng_t_2_1;
				axis = Hatch_Eng_t_2_1_axis;
				angle1 = "rad -100";
			};
			class Hatch_Eng_t_2_2: Hatch_Eng_b_1_1
			{
				selection = Hatch_Eng_t_2_2;
				axis = Hatch_Eng_t_2_2_axis;
				angle1 = "rad 100";
			};
			class Hatch_Eng_b_3_1: Hatch_Eng_b_1_1
			{
				selection = Hatch_Eng_b_3_1;
				axis = Hatch_Eng_b_3_1_axis;
				maxValue = 0.5;
				angle1 = "rad 90";
			};
			class Hatch_Eng_b_3_2: Hatch_Eng_b_3_1
			{
				selection = Hatch_Eng_b_3_2;
				axis = Hatch_Eng_b_3_2_axis;
				angle1 = "rad -90";
			};
			class Hatch_Eng_b_2_1: Hatch_Eng_b_1_1
			{
				source = "speedbrake";
				minValue = 0;
				maxValue = 1;				
				selection = Hatch_Eng_b_2_1;
				axis = Hatch_Eng_b_2_1_axis;
				angle1 = "rad 90";
			};
			class Hatch_Eng_b_2_2: Hatch_Eng_b_2_1
			{
				selection = Hatch_Eng_b_2_2;
				axis = Hatch_Eng_b_2_2_axis;
				angle1 = "rad -90";
			};
			class Engine_1: Hatch_Eng_b_1_1
			{
				selection = Engine_1;
				axis = Engine_1_axis;
				minValue= 0;
				maxValue= 1;
				angle1 = "rad 90";
			};
			class Engine_2: Engine_1
			{
				selection = Engine_2;
				axis = Engine_2_axis;
				angle1 = "rad -180";
			};
			class Engine_3: Engine_1
			{
				selection = Engine_3;
				axis = Engine_3_axis;
				angle1 = "rad 180";
			};
			class Hatch_Weaponbay_1_1: Rotation
			{
				source="user";
				minValue = 0.0;
				maxValue = 1.0;

				selection=Hatch_Weaponbay_1_1;
				axis= Hatch_Weaponbay_1_1_axis;
				angle1= "rad -90";
			};
			class Hatch_Weaponbay_1_2: Hatch_Weaponbay_1_1
			{
				selection=Hatch_Weaponbay_1_2;
				axis= Hatch_Weaponbay_1_2_axis;
				angle1= "rad 90";
			};
			class Hatch_Weaponbay_1_3: Hatch_Weaponbay_1_1
			{
				selection=Hatch_Weaponbay_1_3;
				axis= Hatch_Weaponbay_1_3_axis;
				angle1= "rad 90";
			};
			class Hatch_Weaponbay_1_4: Hatch_Weaponbay_1_1
			{
				selection=Hatch_Weaponbay_1_4;
				axis= Hatch_Weaponbay_1_4_axis;
				angle1= "rad -90";
			};
			class canopy_elevator: Rotation
			{
				type="rotation";
				source="cabin";
				selection="canopy_elevator";
				axis="canopy_elevator_axis";
				memory=1;
				sourceAddress="clamp";
				minValue=0.000000;
				maxValue=8.000000;
				angle0="rad 30";
				angle1=0;
			};
			class canopyHide
	                {
	                        type="hide";
	                        source="damage";
	                        selection="canopy_elevator";
	                };
//Heat Shield
			class Heat_Shield_Up
			{
				type="Translation";
				source="rpm";
				selection="heat_Shield_Up";
				axis="heat_Vertical_axis";
				memory=1;
				minValue=0.000000;
				maxValue=1.000000;
				offset0 = 0.2;
				offset1 = -0.2;
			};
			class Heat_Shield_Down
			{
				type="Translation";
				source="rpm";
				selection="heat_Shield_Down";
				axis="heat_Vertical_axis";
				memory=1;
				minValue=0.000000;
				maxValue=1.000000;
				offset0 = -0.2;
				offset1 = 0.2;
			};
			class Heat_Shield_Left
			{
				type="Translation";
				source="rpm";
				selection="heat_Shield_Left";
				axis="heat_Horizontal_axis";
				memory=1;
				minValue=0.000000;
				maxValue=1.000000;
				offset0 = 0.2;
				offset1 = -0.2;
			};
			class Heat_Shield_Right
			{
				type="Translation";
				source="rpm";
				selection="heat_Shield_Right";
				axis="heat_Horizontal_axis";
				memory=1;
				minValue=0.000000;
				maxValue=1.000000;
				offset0 = -0.2;
				offset1 = 0.2;
			};
//Effects
			class FireEffect
			{
				type = "translation";
				source = "rpm";
				selection = "fire";
				axis = "trails_lenght_axis";
				memory = 1;
				minValue = 0;
				maxValue = 0.25;
				offset0 = 0;
				offset1 = -0.045;
			};
			class FireEffectModifier
			{
				type = "translation";
				source = "rpm";
				selection = "fire";
				axis = "trails_lenght_axis";
				memory = 1;
				minValue = 0.25;
				maxValue = 1;
				offset0 = -0.000;
				offset1 = -0.020;
			};
		};
	};
};